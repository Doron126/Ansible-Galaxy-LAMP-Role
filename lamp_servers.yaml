- name: LAMP stack
  hosts: lamp_servers
  become: true
  become_method: sudo
  tasks:
    - name: Update package cache
      command: sudo apt-get update -y

    - name: Upgrade packages
      command: sudo apt-get upgrade -y

    - name: Install packages
      package:
        name: "{{ item }}"
        state: present
      loop:
        - update-notifier-common
        - mysql-server
        - python3-pymysql
        - apache2
        - php8.3
        - php8.3-fpm
        - php8.3-cli
        - php8.3-mysql
        - php8.3-curl
        - libapache2-mod-php8.3

      environment:
        DEBIAN_FRONTEND: noninteractive
      register: apt_install_result

    - name: Debug apt install result
      debug:
        var: apt_install_result.stdout

    - name: Check if reboot is required
      stat:
        path: /var/run/reboot-required
      register: reboot_required

    - name: Reboot the server if needed
      reboot:
      when: reboot_required.stat.exists

    - name: Enable PHP module for apache
      command: a2enmod php8.3

    - name: Enable SSL module for apache
      command: a2enmod ssl

    - name: Restart Apache
      service:
        name: apache2
        state: restarted
        enabled: true

    - name: Start and enable services
      service:
        name: "{{ item }}"
        state: started
        enabled: true
      loop:
        - php8.3-fpm
        - apache2

    - name: Stop MySQL service
      service:
        name: mysql
        state: stopped

    - name: Ensure MySQL socket directory exists
      file:
        path: /var/run/mysqld
        state: directory
        owner: mysql
        group: mysql
        mode: '0755'

    - name: Start MySQL in safe mode
      shell: |
        mysqld_safe --skip-grant-tables --socket=/var/run/mysqld/mysqld.sock &
        sleep 15
      args:
        executable: /bin/bash

    - name: Reset root password and switch authentication plugin
      shell: |
        mysql -u root <<EOF
        FLUSH PRIVILEGES;
        ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '{{ mysql_root_password }}';
        FLUSH PRIVILEGES;
        EOF
      args:
        executable: /bin/bash

    - name: Kill safe mode MySQL processes
      shell: killall mysqld
      ignore_errors: yes

    - name: Start MySQL service normally
      service:
        name: mysql
        state: started

    - name: Define user and privileges
      mysql_user:
        name: "{{ db_user }}"
        password: "{{ db_password }}"
        host: "%"
        priv: "*.*:CREATE"
        state: present
        column_case_sensitive: false
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Ensure MySQL databases are present
      mysql_db:
        name: "{{ item }}"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"
      loop:
        - "{{ db_1 }}"
        - "{{ db_2 }}"

    - name: Define privileges on the databases
      mysql_user:
        name: "{{ db_user }}"
        priv: "*.*:USAGE"
        column_case_sensitive: false
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Deploy sample PHP file
      copy:
        dest: /var/www/html/info.php
        content: |
          <?php
          phpinfo();
          ?>
        owner: www-data
        group: www-data
        mode: '0644'

    - name: Remove sample PHP file after verification
      file:
        path: /var/www/html/info.php
        state: absent
